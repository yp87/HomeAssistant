---
start_the_leaf:
  description: Used to start the climate on the leaf through google home
  sequence:
    - delay: "00:00:10"
    - service: tts.google_translate_say
      entity_id: media_player.kitchen
      data:
        message: BONJOUR JE DÉMARRE LA LEAF
        language: 'fr'
    #- service: switch.turn_on
    #  entity_id: switch.eve2gmmug_climate_control

update_leaf:
  description: >-
    Fetch the leaf's current state.
    The api may return as succeeded, but with old values
    Or it may return as error.. and it can take up to 5 minutes to return...
    That is why we try it 4 times.
    Calling it directly with "service: script.update_leaf"
    will ensure the calling script will wait for the update.
  mode: queued
  sequence:
    - condition: or
      conditions:
        - "{{ state_attr('sensor.eve2gmmug_charge', 'updated_on') == None }}"
        - >-
          {{ state_attr('sensor.eve2gmmug_charge', 'updated_on')
             == null }}
        - >-
          {{  as_timestamp(now()) -
              as_timestamp(state_attr('sensor.eve2gmmug_charge', 'updated_on'))
              > 600 }}
    - repeat:
        count: 2
        sequence:
          - service: nissan_leaf.update
            data:
              vin: !secret nissan_vin
          - delay: "00:00:10"
          - wait_for_trigger:
              - platform: state
                entity_id: sensor.eve2gmmug_charge
                attribute: update_in_progress
                state: false
            timeout: 600
          - delay: "00:00:10"

auto_switch_on:
  mode: parallel
  sequence:
    - service: switch.turn_on
      data:
        entity_id: "{{ auto_switch_entity }}"
    - service: script.turn_on
      data:
        entity_id: script.auto_switch_off
        variables:
          auto_switch_entity: "{{ auto_switch_entity }}"
          duration_seconds: "{{ duration_seconds }}"

auto_switch_off:
  mode: parallel
  sequence:
    - delay:
        seconds: "{{ duration_seconds }}"
    - condition: template
      value_template: >-
        {{ as_timestamp(now())
           -
           as_timestamp(states[auto_switch_entity].last_changed)
           >=
           duration_seconds|int - 10 }}
    - service: switch.turn_off
      data:
        entity_id: "{{ auto_switch_entity }}"

fred_add_consumed_milk:
  sequence:
    - service: input_datetime.set_datetime
      entity_id: input_datetime.fred_last_milk
      data:
        time: "{{ now().strftime('%H:%M:%S') }}"
    - service: input_number.set_value
      data:
        entity_id: input_number.fred_daily_milk_consumption
        value: >-
          {{ added_milk_quantity | float
             +
             states('input_number.fred_daily_milk_consumption') | float }}
    - service: notify.all_people
      data:
        message: >-
           Fred est rendu à
           {{ states('input_number.fred_daily_milk_consumption') }}
           onces de lait.

fred_vit_d_drop:
  sequence:
    - condition: state
      entity_id: input_boolean.fred_had_drop
      state: "off"
    - service: input_boolean.turn_on
      entity_id: input_boolean.fred_had_drop
    - service: notify.all_people
      data:
        message: "Fred a pris sa goutte."

yan_pills:
  sequence:
    - condition: state
      entity_id: input_boolean.yan_had_pills
      state: "off"
    - service: input_boolean.turn_on
      entity_id: input_boolean.yan_had_pills
    - service: notify.all_people
      data:
        message: "Yan a pris ses pillules."

phone_notification:
  mode: parallel
  sequence:
    - condition: template
      value_template: '{{ is_state("person." + owner, "home") }}'
    - service_template: >-
        input_boolean.
        {%- if type == "notification" -%}
          toggle
        {%- elif type == "rings" -%}
          turn_on
        {%- else -%}
          turn_off
        {%- endif -%}
      data:
        entity_id: input_boolean.{{ owner }}_phone_{{ type or "rings"}}

white_noise_start:
  sequence:
    # This is to prevent the annoying google home startup sound.
    # -----------------------------------------------------------
    - service: media_player.volume_set
      data:
        entity_id: "{{ media_player_id }}"
        volume_level: 0.01
    - service: media_player.turn_off
      data:
        entity_id: "{{ media_player_id }}"
    - delay: 00:00:01
    - service: media_player.turn_on
      data:
        entity_id: "{{ media_player_id }}"
    - delay: 00:00:01
    # -----------------------------------------------------------
    - service: script.turn_on
      data:
        entity_id: script.white_noise_play
        variables:
          media_player_id: "{{ media_player_id }}"
    - delay: 00:00:02
    - service: media_player.volume_set
      data:
        entity_id: "{{ media_player_id }}"
        volume_level: 0.22

white_noise_play:
  sequence:
    - service: media_player.play_media
      data:
        media_content_type: audio/mp3
        entity_id: "{{ media_player_id }}"
        media_content_id: >-
          http://www.gstatic.com/voice_delight/sounds/long/pink_noise.mp3
    - service: script.turn_on
      data:
        entity_id: script.white_noise_loop
        variables:
          media_player_id: "{{ media_player_id }}"

white_noise_loop:
  sequence:
    - delay: 00:52:00
    - service: script.turn_on
      data:
        entity_id: script.white_noise_play
        variables:
          media_player_id: "{{ media_player_id }}"

white_noise_stop:
  sequence:
    - service: script.turn_off
      entity_id: script.white_noise_play
    - service: script.turn_off
      entity_id: script.white_noise_loop
    - service: media_player.turn_off
      data:
        entity_id: "{{ media_player_id }}"

lights_off_except:
  fields:
    exclude_lights:
      description: 'Excluded lights as list'
  sequence:
    - service: light.turn_off
      data:
        entity_id: >-
          {% for device in
                 states.light |
                 rejectattr('entity_id','in', exclude_lights ) |
                 rejectattr('state','in','unavailable') %}
             {%- if not loop.first %}, {% endif -%}
               {{ device.entity_id }}
          {%- endfor %}
