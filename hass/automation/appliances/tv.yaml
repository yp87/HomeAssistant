---
- alias: tv notif phone ringing
  trigger:
    - platform: state
      entity_id: input_boolean.yan_phone_rings
      to: "on"
    - platform: state
      entity_id: input_boolean.cath_phone_rings
      to: "on"
  variables:
    name: >-
      {% if trigger.entity_id == "input_boolean.yan_phone_rings" %}
        Yan
      {% else %}
        Cath
      {% endif %}
  action:
    - service: notify.tv
      data:
        message: "{{ name }}'s phone is ringing"

- alias: tv notif phone notification
  trigger:
    - platform: state
      entity_id: input_boolean.yan_phone_notification
    - platform: state
      entity_id: input_boolean.cath_phone_notification
  variables:
    name: >-
      {% if trigger.entity_id == "input_boolean.yan_phone_notification" %}
        Yan
      {% else %}
        Cath
      {% endif %}
  mode: queued
  action:
    - service: notify.tv
      data:
        message: "{{ name }} received a message"

- alias: tv turns on
  id: tv_turns_on
  trigger:
    - platform: state
      entity_id: media_player.tv
      to: 'on'
  condition:
    condition: state
    entity_id: select.yharmony_activities
    state: "power_off"
  action:
    - service: select.select_option
      data:
        entity_id: select.yharmony_activities
        option: "Watch TV"
    - service: light.turn_on
      data:
        entity_id: light.hyperion
        kelvin: 6000
        brightness_pct: 40

- alias: tv turns off
  id: tv_turns_off
  trigger:
    platform: state
    entity_id: media_player.tv
    to: 'off'
  condition:
    condition: state
    entity_id: select.yharmony_activities
    state: "Watch TV"
  action:
    - service: select.select_option
      data:
        entity_id: select.yharmony_activities
        option: "power_off"
    - service: light.turn_off
      data:
        entity_id: light.hyperion

- alias: chromecast turns on
  id: chromecast_turns_on
  trigger:
    - platform: state
      entity_id: media_player.salon_tv
      from: 'off'
  condition:
    condition: state
    entity_id: select.yharmony_activities
    state: "power_off"
  action:
    - service: select.select_option
      data:
        entity_id: select.yharmony_activities
        option: "Music"

- alias: chromecast turns off
  id: chromecast_turns_off
  trigger:
    - platform: state
      entity_id: media_player.salon_tv
      to: 'off'
  condition:
    condition: state
    entity_id: select.yharmony_activities
    state: "Music"
  action:
    - service: select.select_option
      data:
        entity_id: select.yharmony_activities
        option: "power_off"

- alias: Hyperion phone ringing
  trigger:
    - platform: state
      entity_id: input_boolean.yan_phone_rings
    - platform: state
      entity_id: input_boolean.cath_phone_rings
  variables:
    effect_priority: >-
      {% if trigger.entity_id == "input_boolean.yan_phone_rings" %}
        120
      {% else %}
        119
      {% endif %}
  action:
    - if:
        - '{{ trigger.to_state.state == "on" }}'
      then:
        - service: hyperion_priority.apply_effect
          data:
            effect: >-
              {% if trigger.entity_id == "input_boolean.yan_phone_rings" %}
                Police Lights Solid
              {% else %}
                Rainbow swirl fast
              {% endif %}
            priority: '{{ effect_priority }}'
      else:
        - service: hyperion_priority.clear_priority
          data:
            priority: '{{ effect_priority }}'

- alias: Hyperion phone notification
  trigger:
    - platform: state
      entity_id: input_boolean.yan_phone_notification
    - platform: state
      entity_id: input_boolean.cath_phone_notification
  variables:
    notification_color: >-
      {% if trigger.entity_id == "input_boolean.yan_phone_notification" %}
        [0, 255, 0]
      {% else %}
        [190, 0, 255]
      {% endif %}
    effect_priority: >-
      {% if trigger.entity_id == "input_boolean.yan_phone_notification" %}
        126
      {% else %}
        124
      {% endif %}
  mode: queued
  action:
    - repeat:
        count: 2
        sequence:
          - service: hyperion_priority.apply_effect
            data:
              effect: Cinema brighten lights
              args: >
                { "color-start": [0, 0, 0],
                  "color-end": {{ notification_color }},
                  "fade-time": 0.8 }
              priority: '{{ effect_priority }}'
          - delay: "00:00:01"
          - service: hyperion_priority.apply_effect
            data:
              effect: Cinema dim lights
              args: >
                { "color-start": {{ notification_color }},
                  "color-end": [0, 0, 0],
                  "fade-time": 0.8 }
              priority: '{{ effect_priority }}'
          - delay: "00:00:01"
    - service: hyperion_priority.clear_priority
      data:
        priority: '{{ effect_priority }}'


