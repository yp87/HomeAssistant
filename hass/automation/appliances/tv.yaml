---
- alias: tv notif phone ringing
  trigger:
    - platform: state
      entity_id: input_boolean.yan_phone_rings
      to: "on"
    - platform: state
      entity_id: input_boolean.cath_phone_rings
      to: "on"
  variables:
    name: >-
      {% if trigger.entity_id == "input_boolean.yan_phone_rings" %}
        Yan
      {% else %}
        Cath
      {% endif %}
  action:
    - service: notify.tv
      data:
        message: "{{ name }}'s phone is ringing"

- alias: tv notif phone notification
  trigger:
    - platform: state
      entity_id: input_boolean.yan_phone_notification
    - platform: state
      entity_id: input_boolean.cath_phone_notification
  variables:
    name: >-
      {% if trigger.entity_id == "input_boolean.yan_phone_notification" %}
        Yan
      {% else %}
        Cath
      {% endif %}
  mode: queued
  action:
    - service: notify.tv
      data:
        message: "{{ name }} received a message"

- alias: chromecast turns on
  id: chromecast_turns_on
  trigger:
    - platform: state
      entity_id: remote.salon_tv
      to: 'on'
  condition:
    condition: state
    entity_id: select.yharmony_activities
    state: "power_off"
  action:
    - service: select.select_option
      data:
        entity_id: select.yharmony_activities
        option: "Watch TV"

- alias: chromecast turns off
  id: chromecast_turns_off
  trigger:
    - platform: state
      entity_id: remote.salon_tv
      to: 'off'
  condition:
    condition: state
    entity_id: select.yharmony_activities
    state: "Watch TV"
  action:
    - service: select.select_option
      data:
        entity_id: select.yharmony_activities
        option: "power_off"

- alias: xbox turns on
  id: xbox_turns_on
  trigger:
    - platform: state
      entity_id: binary_sensor.xbox
      to: 'on'
  condition:
    condition: state
    entity_id: select.yharmony_activities
    state: "power_off"
  action:
    - service: select.select_option
      data:
        entity_id: select.yharmony_activities
        option: "XBOX"

- alias: xbox turns off
  id: xbox_turns_off
  trigger:
    - platform: state
      entity_id: binary_sensor.xbox
      to: 'off'
  condition:
    condition: state
    entity_id: select.yharmony_activities
    state: "XBOX"
  action:
    - service: select.select_option
      data:
        entity_id: select.yharmony_activities
        option: "power_off"

- alias: Hyperion phone ringing
  trigger:
    - platform: state
      entity_id: input_boolean.yan_phone_rings
    - platform: state
      entity_id: input_boolean.cath_phone_rings
  variables:
    effect_priority: >-
      {% if trigger.entity_id == "input_boolean.yan_phone_rings" %}
        120
      {% else %}
        119
      {% endif %}
  action:
    - if:
        - '{{ trigger.to_state.state == "on" }}'
      then:
        - service: hyperion_priority.apply_effect
          data:
            effect: >-
              {% if trigger.entity_id == "input_boolean.yan_phone_rings" %}
                Police Lights Solid
              {% else %}
                Rainbow swirl fast
              {% endif %}
            priority: '{{ effect_priority }}'
      else:
        - service: hyperion_priority.clear_priority
          data:
            priority: '{{ effect_priority }}'

- alias: Hyperion phone notification
  trigger:
    - platform: state
      entity_id: input_boolean.yan_phone_notification
    - platform: state
      entity_id: input_boolean.cath_phone_notification
  variables:
    effect: >-
      {% if trigger.entity_id == "input_boolean.yan_phone_notification" %}
        Candle
      {% else %}
        Notify blue
      {% endif %}
    effect_priority: >-
      {% if trigger.entity_id == "input_boolean.yan_phone_notification" %}
        126
      {% else %}
        124
      {% endif %}
  mode: queued
  action:
    - service: hyperion_priority.apply_effect
      data:
        effect: '{{ effect }}'
        priority: '{{ effect_priority }}'
    - delay: "00:00:04"
    - service: hyperion_priority.clear_priority
      data:
        priority: '{{ effect_priority }}'

- alias: tv turns on
  id: tv_turns_on
  trigger:
    - platform: state
      entity_id: media_player.tv
      to: 'on'
  action:
    - service: light.turn_on
      data:
        entity_id: light.hyperion
        kelvin: 6000
        brightness_pct: 40

- alias: tv turns off
  id: tv_turns_off
  trigger:
    - platform: state
      entity_id: media_player.tv
      to: 'off'
  action:
    - service: light.turn_off
      data:
        entity_id: light.hyperion

- alias: set hyperhd hdr mode
  id: set_hyperhd_hdr_mode
  trigger:
    - platform: event
      event_type: denon_hdr
  action:
    - service: hyperion_priority.set_hdr_mode
      data:
        hdr_mode: '{{ trigger.event.data.value }}'

- alias: Query denon hdr mode
  id: query_denon_hdr_mode
  trigger:
    - platform: time_pattern
      seconds: '/30'
  condition:
    - condition: state
      entity_id: binary_sensor.denon_avr_x3500h
      state: "on"
  action:
    - service: denonavr_hdr.get_command
      data:
        command: /goform/formiPhoneAppDirect.xml?SSINFSIGHDR ?
        entity_id: media_player.denon_avr_x3500h