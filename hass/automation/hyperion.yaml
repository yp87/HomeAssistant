---
- alias: Turn Hyperion off when harmony is turned off
  trigger:
    - platform: state
      entity_id: remote.yharmony
      to: 'off'
  action:
    - service: light.turn_off
      data:
        entity_id: light.hyperion

- alias: Hyperion Hdmi when casting
  trigger:
    - platform: state
      entity_id: remote.yharmony
      attribute: current_activity
      to: "Regarder Chromecast"
  mode: restart
  action:
    # show running dots like a loading effect instead of glitchy lights when starting up the system.
    - service: hyperion_priority.apply_effect
      data:
        effect: Running dots
        priority: 130
    # 128 is the priority used by the true hyperion integration.
    - service: hyperion_priority.clear_priority
      data:
        priority: 128
    # 15 seconds is the time for the whole system to be ready.
    - delay: "00:00:15"
    - condition: state
      entity_id: remote.yharmony
      attribute: current_activity
      state: "Regarder Chromecast"
    - service: light.turn_on
      data:
        entity_id: light.hyperion
        effect: HDMI

- alias: Hyperion pausing chromecast
  trigger:
    - platform: state
      entity_id: media_player.salon_tv
      from: "playing"
      to: "paused"
  action:
  - service: hyperion_priority.apply_effect
    data:
      effect: Cinema brighten lights
      priority: 130
      args: { "color-start": [136, 97, 7], "color-end": [238, 173, 47], "fade-time": 2 }

- alias: Hyperion playing chromecast
  trigger:
    - platform: state
      entity_id: media_player.salon_tv
      from: "paused"
  action:
    - service: hyperion_priority.apply_effect
      data:
        effect: Cinema dim lights
        priority: 130
        args: { "color-start": [238, 173, 47], "color-end": [136, 97, 7], "fade-time": 2 }
    - delay: "00:00:02"
    - service: hyperion_priority.clear_priority
      data:
        priority: 130

- alias: Hyperion phone ringing
  trigger:
    - platform: state
      entity_id: input_boolean.yan_phone_rings
    - platform: state
      entity_id: input_boolean.cath_phone_rings
  variables:
    effect_priority: '{{ 120 if trigger.entity_id == "input_boolean.yan_phone_rings" else 119 }}'
  action:
    - choose:
      - conditions: '{{ trigger.to_state.state == "on" }}'
        sequence:
          - service: hyperion_priority.apply_effect
            data:
              effect: '{{ "Police Lights Solid" if trigger.entity_id == "input_boolean.yan_phone_rings" else "Rainbow swirl fast" }}'
              priority: '{{ effect_priority }}'
      default:
        - service: hyperion_priority.clear_priority
          data:
            priority: '{{ effect_priority }}'

- alias: Hyperion phone notification
  trigger:
    - platform: state
      entity_id: input_boolean.yan_phone_notification
    - platform: state
      entity_id: input_boolean.cath_phone_notification
  variables:
    notification_color: '{{ [0, 255, 0] if trigger.entity_id == "input_boolean.yan_phone_notification" else [190, 0, 255] }}'
    effect_priority: '{{ 126 if trigger.entity_id == "input_boolean.yan_phone_notification" else 124 }}'
  mode: queued
  action:
    - repeat:
        count: 2
        sequence:
          - service: hyperion_priority.apply_effect
            data:
              effect: Cinema brighten lights
              args: >
                { "color-start": [0, 0, 0],
                  "color-end": {{ notification_color }},
                  "fade-time": 0.8 }
              priority: '{{ effect_priority }}'
          - delay: "00:00:01"
          - service: hyperion_priority.apply_effect
            data:
              effect: Cinema dim lights
              args: >
                { "color-start": {{ notification_color }},
                  "color-end": [0, 0, 0],
                  "fade-time": 0.8 }
              priority: '{{ effect_priority }}'
          - delay: "00:00:01"
    - service: hyperion_priority.clear_priority
      data:
        priority: '{{ effect_priority }}'
