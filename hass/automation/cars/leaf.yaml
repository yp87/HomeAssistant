---
- alias: Leaf error notification
  id: Leaf_error_notification
  trigger:
    - platform: state
      entity_id: sensor.leaf_last_error_occured
  mode: single
  max_exceeded: silent
  action:
    - service: notify.all_people
      data:
        message: >
          Une erreur c'est produite.
          Impossible de communiquer avec la Leaf.
          Utilisez l'application native.
    - delay: "01:00:00"


- alias: Update leaf in morning
  id: Update_leaf_in_morning
  trigger:
    - platform: time
      at: "05:45:00"
  action:
    - service: script.update_leaf_battery

- alias: Reset leaf next departure canceled at midnight
  id: Reset_leaf_next_departure_canceled_at_midnight
  trigger:
    - platform: time
      at: "00:00:00"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaf_next_departure_canceled

- alias: Ask for leaf departure time for tomorrow
  id: Ask_for_leaf_departure_time_for_tomorrow
  trigger:
    - platform: time
      at: '21:00:00'
  condition:
    condition: and
    conditions:
      - >-
        {{ as_timestamp(now())
           >= as_timestamp(states('input_text.leaf_next_departure')) }}
      - condition: state
        entity_id: input_boolean.leaf_next_departure_canceled
        state: "off"
  action:
    - service: notify.all_people
      data:
        message: "Il n'y a pas encore de départ prévu en Leaf demain."
    - condition: state
      entity_id: person.cath
      state: "home"
    - repeat:
        sequence:
          - delay: "00:00:02"
          - service: light.turn_on
            data:
              entity_id: light.table_de_chevet_de_cath
              brightness: 50
              transition: 1
          - delay: "00:00:02"
          - service: light.turn_off
            data:
              entity_id: light.table_de_chevet_de_cath
              transition: 1
        until:
          - condition: or
            conditions:
              - >-
                {{ as_timestamp(states('input_text.leaf_next_departure'))
                   > as_timestamp(now()) }}
              - condition: state
                entity_id: input_boolean.leaf_next_departure_canceled
                state: "on"

- alias: Alert if the leaf is not plugged in and needs charge.
  id: Alert_if_the_leaf_is_not_plugged_in_and_needs_charge
  trigger:
    - platform: time
      at: '21:00:00'
    - platform: state
      entity_id: input_text.leaf_start_charging
  condition:
    condition: and
    conditions:
      - >-
        {{ as_timestamp(states('input_text.leaf_start_charging'))
           > as_timestamp(now()) }}
      - condition: state
        entity_id: input_boolean.leaf_next_departure_canceled
        state: "off"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaf_plugged_confirmed_by_user
    - service: script.update_leaf_battery
    - condition: state
      entity_id: binary_sensor.leaf_battery_connected
      state: "off"
    - service: notify.all_people
      data:
        message: >-
          La Leaf n'est PAS BRANCHÉ. Le chargement ne pourra pas avoir lieu.
    - condition: state
      entity_id: person.cath
      state: "home"
    - repeat:
        sequence:
          - delay: "00:00:02"
          - service: light.turn_on
            data:
              entity_id: light.table_de_chevet_de_cath
              brightness: 50
              transition: 1
          - delay: "00:00:02"
          - service: light.turn_off
            data:
              entity_id: light.table_de_chevet_de_cath
              transition: 1
        until:
          - condition: or
            conditions:
              # Leaf updates are way too slow to check the real plug status
              - condition: state
                entity_id: input_boolean.leaf_plugged_confirmed_by_user
                state: "on"
              - condition: state
                entity_id: input_boolean.leaf_next_departure_canceled
                state: "on"
              - condition: state
                entity_id: binary_sensor.leaf_battery_connected
                state: "on"

- alias: Calculate leaf charge and climate time
  id: Calculate_leaf_charge_and_climate_time
  trigger:
    - platform: state
      entity_id: input_text.leaf_next_departure
    - platform: state
      entity_id: person.cath
      to: 'home'
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: input_number.leaf_charge_per_hour
  condition: >-
    {{ as_timestamp(states('input_text.leaf_next_departure'))
       > as_timestamp(now()) }}
  mode: restart
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaf_next_departure_canceled
    - service: script.update_leaf_battery
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_climate
        value: >-
          {{ (as_timestamp(states('input_text.leaf_next_departure'))
              - 1500) | timestamp_local }}
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_charging
        value: "2000-01-01 00:00:00"
    - condition: numeric_state
      entity_id: sensor.leaf_battery_level
      below: 80
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_charging
        value: >-
          {% set missing_charge = 80 -
             states('sensor.leaf_battery_level')|int(0) %}
          {% set charge_rate_seconds =
             states('input_number.leaf_charge_per_hour')|int(0) / 3600 %}
          {% set seconds_to_charge = missing_charge / charge_rate_seconds %}
          {{ (as_timestamp(states('input_text.leaf_next_departure'))
             - seconds_to_charge) | timestamp_local }}

- alias: Start charging the leaf
  id: Start_charging_the_leaf
  trigger:
    - platform: template
      value_template: >
        {{ states('sensor.date_time') ==
           (as_timestamp(states('input_text.leaf_start_charging')) |
            timestamp_custom('%Y-%m-%d, %H:%M', true)) }}
  condition: >-
    {{ as_timestamp(states('input_text.leaf_next_departure'))
       > as_timestamp(now()) }}
  action:
    - service: script.charge_the_leaf

- alias: Start the leaf climate control
  id: Start_the_leaf_climate_control
  trigger:
    - platform: template
      value_template: >
        {{ states('sensor.date_time') ==
           (as_timestamp(states('input_text.leaf_start_climate')) |
            timestamp_custom('%Y-%m-%d, %H:%M', false)) }}
  condition: >-
    {{ as_timestamp(states('input_text.leaf_next_departure'))
       > as_timestamp(now()) }}
  action:
    - condition: state
      entity_id: binary_sensor.leaf_battery_connected
      state: "on"
    - service: script.start_the_leaf
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.leaf_battery_connected
          to: "off"
      timeout:
        minutes: 45
    - condition: template
      value_template: "{{ wait.trigger is none }}"
    - service: script.turn_off_leaf_climate

- alias: Refresh Leaf battery info while charging
  id: Refresh_Leaf_battery_info_while_charging
  trigger:
    - platform: state
      entity_id: switch.leaf_battery_charging
      to: "on"
  action:
    - repeat:
        while:
          - condition: state
            entity_id: switch.leaf_battery_charging
            state: "on"
        sequence:
          - delay: "00:10:05"
          - service: script.update_leaf_battery

- alias: Cancel planned leaf departure
  id: Cancel_planned_leaf_departure
  trigger:
    - platform: state
      entity_id: input_boolean.leaf_next_departure_canceled
      to: "on"
  action:
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_next_departure
        value: "2000-01-01 00:00:00"
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_charging
        value: "2000-01-01 00:00:00"
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_climate
        value: "2000-01-01 00:00:00"
    - service: script.turn_off_leaf_climate
