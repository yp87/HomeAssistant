---
- alias: Update leaf in morning
  trigger:
    - platform: time
      at: "05:45:00"
  action:
    - service: script.update_leaf_battery

- alias: Reset leaf next departure canceled at midnight
  trigger:
    - platform: time
      at: "00:00:00"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaf_next_departure_canceled

- alias: Ask for leaf departure time for tomorrow
  trigger:
    - platform: time
      at: '21:00:00'
  condition:
    condition: and
    conditions:
      - >-
        {{ as_timestamp(as_timestamp(now()) | timestamp_local)
           >= as_timestamp(states('input_text.leaf_next_departure')) }}
      - condition: state
        entity_id: input_boolean.leaf_next_departure_canceled
        state: "off"
  action:
    - service: notify.all_people
      data:
        message: "Il n'y a pas encore de départ prévu en Leaf demain."
    - condition: state
      entity_id: person.cath
      state: "home"
    - repeat:
        sequence:
          - delay: "00:00:02"
          - service: light.turn_on
            data:
              entity_id: light.table_de_chevet_de_cath
              brightness: 50
              transition: 1
          - delay: "00:00:02"
          - service: light.turn_off
            data:
              entity_id: light.table_de_chevet_de_cath
              transition: 1
        until:
          - condition: or
            conditions:
              - >-
                {{ as_timestamp(states('input_text.leaf_next_departure'))
                   > as_timestamp(as_timestamp(now()) | timestamp_local) }}
              - condition: state
                entity_id: input_boolean.leaf_next_departure_canceled
                state: "on"

- alias: Alert if the leaf is not plugged in and needs charge.
  trigger:
    - platform: time
      at: '21:00:00'
    - platform: state
      entity_id: input_text.leaf_start_charging
  condition:
    condition: and
    conditions:
      - >-
        {{ as_timestamp(states('input_text.leaf_start_charging'))
           > as_timestamp(as_timestamp(now()) | timestamp_local) }}
      - condition: state
        entity_id: input_boolean.leaf_next_departure_canceled
        state: "off"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaf_plugged_confirmed_by_user
    - service: script.update_leaf_battery
    - condition: state
      entity_id: binary_sensor.leaf_battery_connected
      state: "off"
    - service: notify.all_people
      data:
        message: >-
          La Leaf n'est PAS BRANCHÉ. Le chargement ne pourra pas avoir lieu.
    - condition: state
      entity_id: person.cath
      state: "home"
    - repeat:
        sequence:
          - delay: "00:00:02"
          - service: light.turn_on
            data:
              entity_id: light.table_de_chevet_de_cath
              brightness: 50
              transition: 1
          - delay: "00:00:02"
          - service: light.turn_off
            data:
              entity_id: light.table_de_chevet_de_cath
              transition: 1
        until:
          - condition: or
            conditions:
              # Leaf updates are way too slow to check the real plug status
              - condition: state
                entity_id: input_boolean.leaf_plugged_confirmed_by_user
                state: "on"
              - condition: state
                entity_id: input_boolean.leaf_next_departure_canceled
                state: "on"
              - condition: state
                entity_id: binary_sensor.leaf_battery_connected
                state: "on"

- alias: Calculate leaf charge and climate time
  trigger:
    - platform: state
      entity_id: input_text.leaf_next_departure
    - platform: state
      entity_id: person.cath
      to: 'home'
    - platform: homeassistant
      event: start
  condition: >-
    {{ as_timestamp(states('input_text.leaf_next_departure'))
       > as_timestamp(as_timestamp(now()) | timestamp_local) }}
  mode: restart
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaf_next_departure_canceled
    - service: script.update_leaf_battery
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_climate
        value: >-
          {{ (as_timestamp(states('input_text.leaf_next_departure'))
              - 1800) | timestamp_utc }}
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_charging
        value: "2000-01-01 00:00:00"
    - condition: numeric_state
      entity_id: sensor.leaf_battery_level
      below: 80
    - service: notify.yan
      data:
        message: >
          Would calculate start charge date with
          {{states('sensor.leaf_charge_per_hour_mean')}}% per hour
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_charging
        value: >-
          {% set missing_charge = 80 -
             states('sensor.leaf_battery_level')|int %}
          {% set charge_rate_seconds = 15 / 3600 %}
          {% set seconds_to_charge = missing_charge / charge_rate_seconds %}
          {{ (as_timestamp(states('input_text.leaf_next_departure'))
             - seconds_to_charge) | timestamp_utc }}

- alias: Start charging the leaf
  trigger:
    - platform: time
      at: sensor.leaf_start_charging
  condition: >-
    {{ as_timestamp(states('input_text.leaf_next_departure'))
       > as_timestamp(as_timestamp(now()) | timestamp_local) }}
  action:
    - service: script.charge_the_leaf
    - service: input_number.set_value
      data:
        entity_id: input_number.leaf_charge_before_charging
        value: "{{ states('sensor.leaf_battery_level') }}"
    - service: notify.yan
      data:
        message: >
          Start charging the leaf. Setting leaf_charge_before_charging
          to {{states('sensor.leaf_battery_level')}}%

- alias: Record charge per hour at depart time
  trigger:
    - platform: time
      at: sensor.leaf_next_departure
  condition: >-
    {{ states('input_text.leaf_start_charging') != "2000-01-01 00:00:00" }}
  action:
    - service: script.update_leaf_battery
    - condition: numeric_state
      entity_id: sensor.leaf_battery_level
      above: input_number.leaf_charge_before_charging
    - service: input_number.set_value
      data:
        entity_id: input_number.leaf_charge_per_hour
        value: >
          {{ (states('sensor.leaf_battery_level')|float -
              states('input_number.leaf_charge_before_charging')|float) /
             ((as_timestamp(states('input_text.leaf_next_departure')) -
               as_timestamp(states('input_text.leaf_start_charging'))) /
              3600.0) }}
    - service: notify.yan
      data:
        message: >
          Departure time. updating input_number.leaf_charge_per_hour
          to {{states('input_number.leaf_charge_per_hour')}}%
          from current charge ({{states('sensor.leaf_battery_level')}}) -
          charge before charging
          ({{- " " + states('input_number.leaf_charge_before_charging')}}) /
          ((departure time
          ({{- " " + states('input_text.leaf_next_departure') }}) -
          start charging time
          ( {{states('input_text.leaf_start_charging')}})) / 3600)
    - service: input_number.set_value
      data:
        entity_id: input_number.leaf_charge_before_charging
        value: 999

- alias: Notify Yan when leaf departure is set
  trigger:
    - platform: state
      entity_id: input_text.leaf_next_departure
  condition: >-
    {{ as_timestamp(states('input_text.leaf_next_departure'))
        > as_timestamp(as_timestamp(now()) | timestamp_local) }}
  action:
    - service: notify.yan
      data:
        message: >
          Le temps de charge de la leaf sera calculé avec un taux de
           {{- " " + states('sensor.leaf_charge_per_hour_mean') }}% par heure.

- alias: Start the leaf climate control
  trigger:
    - platform: time
      at: sensor.leaf_start_climate
  condition: >-
    {{ as_timestamp(states('input_text.leaf_next_departure'))
       > as_timestamp(as_timestamp(now()) | timestamp_local) }}
  action:
    - condition: state
      entity_id: binary_sensor.leaf_battery_connected
      state: "on"
    - service: switch.turn_on
      entity_id: switch.leaf_climate
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.leaf_battery_connected
          to: "off"
      timeout:
        minutes: 45
    - condition: template
      value_template: "{{ wait.trigger is none }}"
    - service: script.turn_off_leaf_climate

- alias: Cancel planned leaf departure
  trigger:
    - platform: state
      entity_id: input_boolean.leaf_next_departure_canceled
      to: "on"
  action:
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_next_departure
        value: "2000-01-01 00:00:00"
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_charging
        value: "2000-01-01 00:00:00"
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_climate
        value: "2000-01-01 00:00:00"
    - service: script.turn_off_leaf_climate
