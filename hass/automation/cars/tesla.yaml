---
- alias: Initialize bibicar update to false
  trigger:
    platform: homeassistant
    event: start
  action:
    service: switch.turn_off
    entity_id: switch.bibicar_update_switch

- alias: Notify when something is opened while exiting the car
  trigger:
    - platform: state
      entity_id:
        - input_boolean.cath_in_tesla
        - input_boolean.yan_in_tesla
      to: "off"
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id:
            - binary_sensor.tesla_windows
            - binary_sensor.tesla_trunk
            - binary_sensor.tesla_frunk
            - binary_sensor.tesla_doors
            - binary_sensor.tesla_lock
          state: "off"
  action:
    - service: script.notify_and_speak
      data:
        message: >-
          La Tesla est arrêtée, mais
          {%- set stringMap = [
            ("tesla_windows", "une fenêtre est ouverte"),
            ("tesla_trunk", "la valise arrière est ouverte"),
            ("tesla_frunk", "la valise avant est ouverte"),
            ("tesla_doors", "une porte est ouverte"),
            ("tesla_lock", "les portes sont débarrées"),
          ] -%}
          {%- for entity_id, string in stringMap
              if is_state("binary_sensor."+entity_id, "on") %}
            {%- if loop.last and not loop.first %} et {% elif loop.first -%}
            {{ " " }}{% else %}, {% endif -%}
            {{string}}
          {%- endfor %}.

- alias: Notify when something is opened and no one is in the car
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.tesla_windows
        - binary_sensor.tesla_trunk
        - binary_sensor.tesla_frunk
        - binary_sensor.tesla_doors
        - binary_sensor.tesla_lock
      to: "on"
      for: "00:05:00"
  condition:
    - condition: state
      entity_id: input_boolean.cath_in_tesla
      state: "off"
    - condition: state
      entity_id: input_boolean.yan_in_tesla
      state: "off"
  action:
    - service: script.notify_and_speak
      data:
        message: >-
          {%- set stringMap = ({
            "tesla_windows": "une fenêtre est ouverte",
            "tesla_trunk": "la valise arrière est ouverte",
            "tesla_frunk": "la valise avant est ouverte",
            "tesla_doors": "une porte est ouverte",
            "tesla_lock": "les portières sont débarrées",
          }) -%}
          La Tesla est arrêtée, mais{{ " " }}
          {{- stringMap[trigger.to_state.object_id] }}.

- alias: update tesla gps coordinates
  trigger:
    platform: state
    entity_id:
      - sensor.tesla_latitude
      - sensor.tesla_longitude
  action:
    - service: device_tracker.see
      data_template:
        dev_id: tesla
        gps:
          - "{{ states('sensor.tesla_latitude') }}"
          - "{{ states('sensor.tesla_longitude') }}"
