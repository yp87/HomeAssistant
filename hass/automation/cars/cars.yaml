---
- alias: Leaf start climate on climate button press
  id: Leaf_start_climate_on_climate_button_press
  trigger:
    - platform: state
      entity_id: input_button.leaf_start_climate
  mode: single
  max_exceeded: silent
  action:
    - if:
        - condition: state
          entity_id: input_select.car_plugged
          state: "Leaf"
      then:
        - service: switch.turn_on
          entity_id: switch.wallbox_portal_pause_resume
    - repeat:
        count: 4
        sequence:
          - service: joaoapps_join.android_server_send_tasker
            data:
              command: "LeafStartClimate"
          - delay: "00:00:20"

- alias: Start charge on charge button press
  id: start_charge_on_charge_button_press
  trigger:
    - platform: state
      entity_id: input_button.leaf_start_charge
  variables:
    not_plugged_message: "L'auto n'est pas branchée."
  mode: single
  max_exceeded: silent
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.force_charge_car
    - service: switch.turn_on
      entity_id: switch.wallbox_portal_pause_resume
    - wait_template: >-
        "{{ is_state('sensor.wallbox_portal_status_description', 'Charging') }}"
      timeout: "00:05:00"
    - condition: template
      value_template: "{{ not wait.completed }}"
    - service: notify.all_people
      data:
        message: "{{ not_plugged_message }}"
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: 'disarmed'
    - service: tts.google_translate_say
      entity_id: media_player.kitchen
      data:
        message: "{{ not_plugged_message }}"
        language: 'fr'

- alias: Update leaf
  id: Update_leaf
  trigger:
    - platform: time
      at: "05:45:00"
    - platform: state
      entity_id: person.cath
      to: 'home'
    - platform: state
      entity_id: input_select.car_plugged
      to: "Leaf"
  action:
    - service: script.update_leaf

- alias: Reset leaf next departure canceled at midnight
  id: Reset_leaf_next_departure_canceled_at_midnight
  trigger:
    - platform: time
      at: "00:00:00"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaf_next_departure_canceled

- alias: Ask for leaf departure time for tomorrow
  id: Ask_for_leaf_departure_time_for_tomorrow
  trigger:
    - platform: time
      at: '21:00:00'
  condition:
    and:
      - >-
        {{ as_timestamp(now())
           >= as_timestamp(states('input_text.leaf_next_departure')) }}
      - condition: state
        entity_id: input_boolean.leaf_next_departure_canceled
        state: "off"
  action:
    - service: notify.all_people
      data:
        message: "Il n'y a pas encore de départ prévu en Leaf demain."
    - condition: state
      entity_id: person.cath
      state: "home"
    - repeat:
        sequence:
          - delay: "00:00:02"
          - service: light.turn_on
            data:
              entity_id: light.table_de_chevet_de_cath
              brightness: 50
              transition: 1
          - delay: "00:00:02"
          - service: light.turn_off
            data:
              entity_id: light.table_de_chevet_de_cath
              transition: 1
        until:
          - or:
              - >-
                {{ as_timestamp(states('input_text.leaf_next_departure'))
                   > as_timestamp(now()) }}
              - condition: state
                entity_id: input_boolean.leaf_next_departure_canceled
                state: "on"

- alias: Alert if the leaf is not plugged in and needs charge.
  id: Alert_if_the_leaf_is_not_plugged_in_and_needs_charge
  trigger:
    - platform: time
      at: '21:00:00'
    - platform: state
      entity_id: input_text.leaf_start_charging
  condition:
    and:
      - >-
        {{ as_timestamp(states('input_text.leaf_start_charging'))
           > as_timestamp(now()) }}
      - condition: state
        entity_id: input_boolean.leaf_next_departure_canceled
        state: "off"
      - condition: not
        conditions:
          - condition: state
            entity_id: input_select.car_plugged
            state: "Leaf"
  action:
    - service: notify.all_people
      data:
        message: >-
          La Leaf n'est PAS BRANCHÉ. Le chargement ne pourra pas avoir lieu.
    - condition: state
      entity_id: person.cath
      state: "home"
    - repeat:
        sequence:
          - delay: "00:00:02"
          - service: light.turn_on
            data:
              entity_id: light.table_de_chevet_de_cath
              brightness: 50
              transition: 1
          - delay: "00:00:02"
          - service: light.turn_off
            data:
              entity_id: light.table_de_chevet_de_cath
              transition: 1
        until:
          - or:
              # Leaf updates are way too slow to check the real plug status
              - condition: state
                entity_id: input_select.car_plugged
                state: "Leaf"
              - condition: state
                entity_id: input_boolean.leaf_next_departure_canceled
                state: "on"

- alias: Calculate leaf charge and climate time
  id: Calculate_leaf_charge_and_climate_time
  trigger:
    - platform: state
      entity_id: input_text.leaf_next_departure
    - platform: state
      entity_id: person.cath
      to: 'home'
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: input_number.leaf_charge_per_hour
    - platform: state
      entity_id: input_number.leaf_selected_battery
  condition: >-
    {{ as_timestamp(states('input_text.leaf_next_departure'))
       > as_timestamp(now()) }}
  mode: restart
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaf_next_departure_canceled
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_climate
        value: >-
          {{ (as_timestamp(states('input_text.leaf_next_departure'))
              - 1500) | timestamp_local }}
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_charging
        value: "2000-01-01 00:00:00"
    - condition: numeric_state
      entity_id: input_number.leaf_selected_battery
      below: 80
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_charging
        value: >-
          {% set missing_charge = 80 -
             states('input_number.leaf_selected_battery')|int(0) %}
          {% set charge_rate_seconds =
             states('input_number.leaf_charge_per_hour')|int(0) / 3600 %}
          {% set seconds_to_charge = missing_charge / charge_rate_seconds %}
          {{ (as_timestamp(states('input_text.leaf_next_departure'))
             - seconds_to_charge) | timestamp_local }}

- alias: Start charging the leaf
  id: Start_charging_the_leaf
  trigger:
    - platform: template
      value_template: >
        {{ states('sensor.date_time') ==
           (as_timestamp(states('input_text.leaf_start_charging')) |
            timestamp_custom('%Y-%m-%d, %H:%M', true)) }}
  condition: >-
    {{ as_timestamp(states('input_text.leaf_next_departure'))
       > as_timestamp(now()) }}
  action:
    - service: input_button.press
      entity_id: input_button.leaf_start_charge

- alias: Start the leaf climate control
  id: Start_the_leaf_climate_control
  trigger:
    - platform: template
      value_template: >
        {{ states('sensor.date_time') ==
           (as_timestamp(states('input_text.leaf_start_climate')) |
            timestamp_custom('%Y-%m-%d, %H:%M', true)) }}
  condition: >-
    {{ as_timestamp(states('input_text.leaf_next_departure'))
       > as_timestamp(now()) }}
  action:
    - condition: state
      entity_id: input_select.car_plugged
      state: "Leaf"
    - service: input_button.press
      entity_id: input_button.leaf_start_climate

- alias: Refresh Leaf battery info while charging
  id: Refresh_Leaf_battery_info_while_charging
  trigger:
    - platform: state
      entity_id: sensor.wallbox_portal_status_description
      to: "Charging"
      for: "00:00:10"
  action:
    - repeat:
        while:
          - condition: state
            entity_id: sensor.wallbox_portal_status_description
            state: "Charging"
          - condition: state
            entity_id: input_select.car_plugged
            state: "Leaf"
        sequence:
          - delay: "00:10:05"
          - service: script.update_leaf

- alias: Cancel planned leaf departure
  id: Cancel_planned_leaf_departure
  trigger:
    - platform: state
      entity_id: input_boolean.leaf_next_departure_canceled
      to: "on"
  action:
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_next_departure
        value: "2000-01-01 00:00:00"
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_charging
        value: "2000-01-01 00:00:00"
    - service: input_text.set_value
      data:
        entity_id: input_text.leaf_start_climate
        value: "2000-01-01 00:00:00"

- alias: Leaf 85% notification
  id: Leaf_85_notification
  trigger:
    - platform: numeric_state
      entity_id: sensor.leaf_charge
      above: 85
  condition:
    - condition: not
      conditions:
        - condition: state
          entity_id: alarm_control_panel.home_alarm
          state: "armed_home"
  action:
    - service: notify.all_people
      data:
        message: >-
          La leaf est chargée à {{ states('sensor.leaf_charge') }}%

- alias: Stop charge on leaf charge detected
  id: Stop_charge_on_leaf_charge_detected
  trigger:
    - platform: state
      entity_id: input_select.car_plugged
      to: "Leaf"
  condition:
    or:
      - >-
        {{ as_timestamp(now())
           >= as_timestamp(states('input_text.leaf_next_departure')) }}
      - >-
        {{ as_timestamp(now())
           < as_timestamp(states('input_text.leaf_start_charging')) }}
  action:
    - condition: state
      entity_id: input_boolean.force_charge_car
      state: "off"
    - service: switch.turn_off
      entity_id: switch.wallbox_portal_pause_resume

- alias: Detect plugged car
  id: Detect_plugged_car
  trigger:
    - platform: state
      entity_id: sensor.wallbox_portal_charging_power
      for: "00:00:10"
    - platform: state
      entity_id: sensor.wallbox_portal_status_description
      to: "Ready"
  action:
    - choose:
        - conditions:
            - "{{ is_state('sensor.wallbox_portal_status_description', 'Ready') }}"
          sequence:
            - service: input_select.select_option
              entity_id: input_select.car_plugged
              data:
                option: None
        - conditions:
            - "{{ states('sensor.wallbox_portal_charging_power')|float < 5 }}"
            - "{{ is_state('sensor.wallbox_portal_status_description', 'Charging') }}"
          sequence:
            - service: input_select.select_option
              entity_id: input_select.car_plugged
              data:
                option: Unknown
        - conditions:
            - "{{ states('sensor.wallbox_portal_charging_power')|float >= 5 }}"
            - "{{ states('sensor.wallbox_portal_charging_power')|float <= 6.45 }}"
          sequence:
            - service: input_select.select_option
              entity_id: input_select.car_plugged
              data:
                option: Leaf
        - conditions:
            - "{{ states('sensor.wallbox_portal_charging_power')|float > 6.45 }}"
          sequence:
            - service: input_select.select_option
              entity_id: input_select.car_plugged
              data:
                option: Polestar 2

- alias: Notify unknown plugged car
  id: Notify_unknown_plugged_car
  trigger:
    - platform: state
      entity_id: input_select.car_plugged
      to: "Unknown"
      for: "00:00:10"
  action:
    - service: notify.all_people
      data:
        message: "Impossible de reconnaitre la voiture branchée."

- alias: Reset force charge car
  id: Reset_force_charge_car
  trigger:
    - platform: state
      entity_id: sensor.wallbox_portal_status_description
      from: "Charging"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.force_charge_car
