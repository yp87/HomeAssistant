---
- alias: Sync parking camera time
  id: sync_parking_camera_time
  trigger:
    - platform: time
      at: '00:00:00'
    - platform: homeassistant
      event: start
  condition:
    condition: state
    entity_id: camera.parking
    state: idle
  action:
    - service: shell_command.set_parking_camera_time

#- alias: Parking event summary
#  id: Parking_event_summary
#  use_blueprint:
#    path: custom_event_summary.yaml
#    input:
#      input_mode: Camera
#      important: false
#      remember: true
#      notify_device:
#        - 336c5b4fae166f05bf031d1554f838db
#      camera_entities:
#        - camera.parking
#      motion_sensors:
#        - binary_sensor.parking_motion_guard
#      preview_mode: Snapshot
#      cooldown: 5
#      provider: 01JK9JF4FXVCQ3H8HC4DC0CEJ0
#      model: gemini-2.0-flash-exp

- alias: Notify when motion in parking
  id: Notify_when_motion_in_parking
  mode: single
  max_exceeded: silent
  trigger:
    - platform: state
      entity_id: binary_sensor.parking_motion_guard
      to: "on"
  action:
    - delay: "00:00:08"
    - service: gemini_api.generate_text
      continue_on_error: true
      data:
        prompt: >-
          Your job is to classify security events based on cctv footage. Your options: "passive" if an event seems unimportant, "time-sensitive" if important and "critical" for suspicious events.
          Use "critical" only for possible burglaries and similar events. "time-sensitive" could be a courier at the front door or an event of similar importance.
          Reply with these replies exactly.
        images:
          - /pictures/parking00001.jpg
          - /pictures/parking00006.jpg
          - /pictures/parking00012.jpg
      response_variable: importance
    - if:
        - "{{ importance is not defined or importance.text|lower != 'passive' }}"
      then:
        - service: gemini_api.generate_text
          continue_on_error: true
          data:
            prompt: >-
              Summarize what's happening in the camera feed (one sentence max).
              Don't describe the scene!
              If there is a person, describe what they're doing and what they look like.
              If they look like a courier mention that! If nothing is happening, say so.
            images:
              - /pictures/parking00001.jpg
              - /pictures/parking00006.jpg
              - /pictures/parking00012.jpg
          response_variable: image_description
        - service: notify.yan
          data:
            message: "{{ image_description.text if image_description else 'Parking Motion detected' }}"
            data:
              attachment: /pictures/parking00006.jpg
      else:
        - service: notify.yan
          data:
            message: "passive, should be ignored."
            data:
              attachment: /pictures/parking00006.jpg
    - delay: "00:05:00"