---
- alias: update leaf in morning
  trigger:
    - platform: time
      at: "05:45:00"
  action:
    - service: script.turn_on
      entity_id: script.update_leaf

- alias: Reset leaf next departure canceled at midnight
  trigger:
    - platform: time
      at: "00:00:00"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaf_next_departure_canceled

- alias: ask for leaf departure time for tomorrow
  initial_state: false
  trigger:
    - platform: time
      at: '09:00:00'
  condition:
    condition: and
    conditions:
      - >-
        {{ as_timestamp(now())
           - as_timestamp(states('input_datetime.leaf_next_departure')) >= 0}}
      - condition: state
        entity_id: input_boolean.leaf_next_departure_canceled
        state: "off"
  action:
    - service: notify.cath
      data:
        message: "Il n'y a pas de départ prévu en Leaf demain."
    - condition: state
      entity_id: person.cath
      state: "home"
    - repeat:
        sequence:
          - delay: "00:00:02"
          - service: light.turn_on
            data:
              entity_id: light.table_de_chevet_de_cath
              brightness: 50
              transition: 1
          - delay: "00:00:02"
          - service: light.turn_off
            data:
              entity_id: light.table_de_chevet_de_cath
              transition: 1
        until:
          - condition: or
            conditions:
              - >-
                {{ as_timestamp(now())
                  - as_timestamp(states('input_datetime.leaf_next_departure')) < 0}}
              - condition: state
                entity_id: input_boolean.leaf_next_departure_canceled
                state: "on"

- alias: leaf - hue - Long Press ON
  trigger:
    - platform: state
      entity_id: sensor.hue_dimmer_switch_1
      to: "1_hold"
  action:
    - service: notify.cath
      data:
        message: >-
          {%- set weekday = ['Lundi','Mardi','Mercredi','Jeudi',
                            'Vendredi','Samedi','Dimanche'] -%}
          {%- set dt = states.sensor.eve2gmmug_charge.attributes.updated_on -%}
            Bon matin Catherine!
            Ton carosse est chargé à {{ states('sensor.eve2gmmug_charge') }}%
            et est
          {%- if is_state("binary_sensor.eve2gmmug_plug_status", "on") -%}
            branché.
          {%- else -%}
            DÉBRANCHÉ.
          {%- endif -%}
          La dernière mise à jour est ce {{ weekday[dt.weekday()] }}
          à {{ dt.astimezone().strftime('%HH%M') }}.
