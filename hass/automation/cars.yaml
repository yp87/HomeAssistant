---
- alias: Update leaf in morning
  trigger:
    - platform: time
      at: "05:45:00"
  action:
    - service: script.turn_on
      entity_id: script.update_leaf

- alias: Reset leaf next departure canceled at midnight
  trigger:
    - platform: time
      at: "00:00:00"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaf_next_departure_canceled

- alias: Ask for leaf departure time for tomorrow
  trigger:
    - platform: time
      at: '21:00:00'
  condition:
    condition: and
    conditions:
      - >-
        {{ as_timestamp(as_timestamp(now()) | timestamp_local)
           >= as_timestamp(states('input_datetime.leaf_next_departure')) }}
      - condition: state
        entity_id: input_boolean.leaf_next_departure_canceled
        state: "off"
  action:
    - service: notify.all_people
      data:
        message: "Il n'y a pas encore de départ prévu en Leaf demain."
    - condition: state
      entity_id: person.cath
      state: "home"
    - repeat:
        sequence:
          - delay: "00:00:02"
          - service: light.turn_on
            data:
              entity_id: light.table_de_chevet_de_cath
              brightness: 50
              transition: 1
          - delay: "00:00:02"
          - service: light.turn_off
            data:
              entity_id: light.table_de_chevet_de_cath
              transition: 1
        until:
          - condition: or
            conditions:
              - >-
                {{ as_timestamp(states('input_datetime.leaf_next_departure'))
                   > as_timestamp(as_timestamp(now()) | timestamp_local) }}
              - condition: state
                entity_id: input_boolean.leaf_next_departure_canceled
                state: "on"

- alias: Alert if the leaf is not plugged in and need charge.
  trigger:
    - platform: time
      at: '21:00:00'
    - platform: state
      entity_id: input_datetime.leaf_start_charging
  condition:
    condition: and
    conditions:
      - >-
        {{ as_timestamp(states('input_datetime.leaf_start_charging'))
           > as_timestamp(as_timestamp(now()) | timestamp_local) }}
      - condition: state
        entity_id: input_boolean.leaf_next_departure_canceled
        state: "off"
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaf_plugged_confirmed_by_user
    - service: script.update_leaf
    - condition: state
      entity_id: binary_sensor.eve2gmmug_plug_status
      state: "off"
    - service: notify.all_people
      data:
        message: >-
          La Leaf n'est PAS BRANCHÉ. Le chargement ne pourra pas avoir lieu.
    - condition: state
      entity_id: person.cath
      state: "home"
    - repeat:
        sequence:
          - delay: "00:00:02"
          - service: light.turn_on
            data:
              entity_id: light.table_de_chevet_de_cath
              brightness: 50
              transition: 1
          - delay: "00:00:02"
          - service: light.turn_off
            data:
              entity_id: light.table_de_chevet_de_cath
              transition: 1
        until:
          - condition: or
            conditions:
              # Leaf updates are way to slow to check the real plug status
              - condition: state
                entity_id: input_boolean.leaf_plugged_confirmed_by_user
                state: "on"
              - condition: state
                entity_id: input_boolean.leaf_next_departure_canceled
                state: "on"

- alias: Calculate leaf charge and climate time
  trigger:
    - platform: state
      entity_id: input_datetime.leaf_next_departure
    - platform: state
      entity_id: person.cath
      to: 'home'
  condition: >-
    {{ as_timestamp(states('input_datetime.leaf_next_departure'))
       > as_timestamp(as_timestamp(now()) | timestamp_local) }}
  mode: restart
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.leaf_next_departure_canceled
    - service: script.update_leaf
    - service: input_datetime.set_datetime
      data:
        entity_id: input_datetime.leaf_start_climate
        datetime: >-
          {{ (as_timestamp(states('input_datetime.leaf_next_departure'))
              - 1800) | timestamp_utc }}
    - service: input_datetime.set_datetime
      data:
        entity_id: input_datetime.leaf_start_charging
        timestamp: 1
    - condition: numeric_state
      entity_id: sensor.eve2gmmug_charge
      below: 90
    - service: input_datetime.set_datetime
      data:
        entity_id: input_datetime.leaf_start_charging
        datetime: >-
          {% set missing_charge = 90 - states('sensor.eve2gmmug_charge')|int %}
          {% set charge_rate_seconds = 15 / 3600 %}
          {% set seconds_to_charge = missing_charge / charge_rate_seconds %}
          {{ (as_timestamp(states('input_datetime.leaf_next_departure'))
             - seconds_to_charge) | timestamp_utc }}

- alias: Start charging the leaf
  trigger:
    - platform: time
      at: input_datetime.leaf_start_charging
  condition: >-
    {{ as_timestamp(states('input_datetime.leaf_next_departure'))
       > as_timestamp(as_timestamp(now()) | timestamp_local) }}
  action:
    # The implementation of the nissan's api is so unreliable
    # that we do it twice just for luck...
    - repeat:
        count: 2
        sequence:
          - service: nissan_leaf.start_charge
            data:
              vin: !secret nissan_vin
          - delay: "00:00:30"


- alias: Start the leaf climate control
  trigger:
    - platform: time
      at: input_datetime.leaf_start_climate
  condition: >-
    {{ as_timestamp(states('input_datetime.leaf_next_departure'))
       > as_timestamp(as_timestamp(now()) | timestamp_local) }}
  action:
    - condition: state
      entity_id: binary_sensor.eve2gmmug_plug_status
      state: "on"
    - service: switch.turn_on
      entity_id: switch.eve2gmmug_climate_control
    - wait_for_trigger:
        - platform: state
          entity_id: binary_sensor.eve2gmmug_plug_status
          state: "off"
      timeout:
        minutes: 45
    - condition: template
      value_template: "{{ not wait.completed }}"
    - service: switch.turn_off
      entity_id: switch.eve2gmmug_climate_control
    - service: notify.all_people
      data:
        message: >-
           Il semble que le départ prévu de la Leaf n'est pas eu lieu.
           Il est important d'arrêter le contrôle du climat si c'est le cas.

- alias: Cancel planned leaf departure
  trigger:
    - platform: state
      entity_id: input_boolean.leaf_next_departure_canceled
      to: "on"
  action:
    - service: input_datetime.set_datetime
      data:
        entity_id: input_datetime.leaf_next_departure
        timestamp: 1
    - service: input_datetime.set_datetime
      data:
        entity_id: input_datetime.leaf_start_charging
        timestamp: 1
    - service: input_datetime.set_datetime
      data:
        entity_id: input_datetime.leaf_start_climate
        timestamp: 1
    - service: switch.turn_off
      entity_id: switch.eve2gmmug_climate_control

- alias: Leaf - hue - Long Press ON
  trigger:
    - platform: state
      entity_id: sensor.hue_dimmer_switch_1
      to: "1_hold"
  action:
    - service: notify.cath
      data:
        message: >-
          {%- set weekday = ['Lundi','Mardi','Mercredi','Jeudi',
                            'Vendredi','Samedi','Dimanche'] -%}
          {%- set dt = states.sensor.eve2gmmug_charge.attributes.updated_on -%}
            Bon matin Catherine!
            Ton carosse est chargé à {{ states('sensor.eve2gmmug_charge') }}%
            et est
          {%- if is_state("binary_sensor.eve2gmmug_plug_status", "on") -%}
            branché.
          {%- else -%}
            DÉBRANCHÉ.
          {%- endif -%}
          La dernière mise à jour est ce {{ weekday[dt.weekday()] }}
          à {{ dt.astimezone().strftime('%HH%M') }}.
