---
version: '3'
services:
  homeassistant:
    container_name: hass
    image: homeassistant/home-assistant:stable
    volumes:
      - ${BASE_PATH}/hass:/config
    restart: always
    network_mode: "host"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.hass.loadbalancer.server.port=8123"
      - "traefik.http.routers.hass.rule=Host(`${EXTERNAL_URL}`)"
      - "traefik.http.routers.hass.entrypoints=websecure"
      - "traefik.http.routers.hass.tls=true"
      - "traefik.http.routers.hass.tls.certresolver=le"
      - 'custom.label=hass'
    depends_on:
      - mqtt
      - alarm
      - database
      - zwavejs2mqtt

  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:latest
    restart: always
    ports:
      - "1883:1883"
    volumes:
      - ${BASE_PATH}/mosquitto/config:/mosquitto/config

  alarm:
    container_name: alarm
    build: alarm/
    image: alarm:latest
    restart: always
    depends_on:
      - mqtt

  database:
    container_name: postgres
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_USER=${AUTOMATION_USERNAME}
      - POSTGRES_PASSWORD=${AUTOMATION_PASSWORD}
      - "POSTGRES_MULTIPLE_DATABASES=${HOMEASSISTANT_RECORDER_DATABASE}"
    volumes:
      - ${BASE_PATH}/volumes/automation-db:/var/lib/postgresql/data
      - "${BASE_PATH}/volumes/docker-postgresql-multiple-databases:\
         /docker-entrypoint-initdb.d"
    ports:
      - "5432:5432"

  zwavejs2mqtt:
    container_name: zwavejs2mqtt
    image: zwavejs/zwavejs2mqtt:latest
    restart: always
    tty: true
    stop_signal: SIGINT
    environment:
      - SESSION_SECRET=${ZWAVE_SESSION_SECRET}
    devices:
      - '/dev/zwave:/dev/zwave'
    volumes:
      - zwave-config:/usr/src/app/store
    ports:
      # port for web interface
      - '8091:8091'
      # port for Z-Wave JS websocket server
      - '3001:3000'

  traefik:
    container_name: traefik
    image: traefik:latest
    command:
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=${EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--providers.docker.constraints=Label(`custom.label`,`hass`)"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    network_mode: "host"
    restart: unless-stopped

  piper:
    container_name: piper
    image: rhasspy/wyoming-piper
    command: --voice fr-siwis-medium
    volumes:
      - piper-data:/data
    environment:
      - TZ=America/New_York
    restart: unless-stopped
    ports:
      - 10200:10200

  whisper:
    container_name: vosk
    image: rhasspy/wyoming-vosk
    command: --language fr --data-dir data
    volumes:
      - vosk-data:/data
    environment:
      - TZ=America/New_York
    restart: unless-stopped
    ports:
      - 10300:10300

volumes:
  zwave-config:
  letsencrypt:
  piper-data:
  vosk-data:
